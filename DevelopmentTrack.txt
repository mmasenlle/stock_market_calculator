Calculinator Development Track
==============================

Thu Apr  1 12:04:47 CEST 2010
 Research and startup (informal)
---------------------------------
 -Sketch the architecture
 -Build working repository/environment
 -Brief research about few subjects: data feed sources, db, ...


Thu Apr  1 19:13:40 CEST 2010
 Data feed program I
--------------------
 -Start ccltor_feeder
  +Main loop
  +Check date and time
  +Fetch page
  +Parse page
  +Basic configuration
Comments:
The parse will be split in two parts: one that will be handled with an
external program/script, and other built-in. This way we can have separate
parser for different sources. The first parser will translate the data to a
well known xml syntax that the built-in parser will handle. The external
parsers will be created when needed, and will be expecified in the
configuration with the url.


Wed Apr  7 23:08:53 CEST 2010
 DB setup
----------
 -Install the DBMS, create a db, users, etc.
 -Sketch a DB schema for the system.
 -Create scripts to build the first approach of the schema.


Sat Apr 10 20:20:05 CEST 2010
 Data feed program II
---------------------
 -Continue ccltor_feeder
  +Sending of data to the db
  +An observer/notifier mechanism
Comments:
For the intercommunications of the tasks, sending events and so on, there
will be a IC subsystem in the folder: ccltor/ic. The messages Event,
MsgRegister, Raw, etc, will be binded in classes.
For the db access, the classes to isolate the DBMS will be in the ccltor/db
folder.


Thu Apr 15 23:14:35 CEST 2010
 Validate feeder
-----------------
 -Debug and fix the corner cases of the program
 -Do a good test in production


Thu Apr 15 23:19:39 CEST 2010
 Chart I
---------
 -Do a program to draw simple charts
  +Read simple options (value, day, ...)
  +Get the date for price from db
  +Print the points
Comments:
Working, but is done in opengl and is a bit poor in text information. For the
next iteration on charts, better use a specific library (i.e. gnuplot).


Sun Apr 18 22:37:00 CEST 2010
 Running control I
------------------
 -Start a program to send messages to processes
  +First configuration (peers, event numbers)
  +Send and finish
Comments:
Maybe add in the future support to receive messages (ack and so on).
Maybe add parameters more human friendly instead of event numbers.


Wed Apr 21 23:38:43 CEST 2010
 Cruncher concept probes
-------------------------
 -Program a cruncher manager
  +Load plugins as shared libraries
  +Create a thread/process for them (try to use clone)
 -Program a plugin test
Comments: the plugin is load as shared library and the process is clone for
each. A test and the statistics process are done. The notifications,
internally and with others needs to be worked better.



